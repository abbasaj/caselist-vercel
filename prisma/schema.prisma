// prisma/schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  LAWYER
  CLIENT
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String
  role      Role
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  lawyer    Lawyer?
  client    Client?
}

model Lawyer {
  id        String   @id @default(cuid())
  name      String
  bio       String?
  userId    String   @unique
  user      User     @relation(fields: [userId], references: [id])

  cases     Case[]   @relation("LawyerCases")
  messages  Message[]
  payments  Payment[]
  ratings   Rating[]
}

model Client {
  id        String   @id @default(cuid())
  name      String
  userId    String   @unique
  user      User     @relation(fields: [userId], references: [id])

  cases     Case[]   @relation("ClientCases")
  messages  Message[]
  payments  Payment[]
  ratings   Rating[]
}

model Case {
  id        String   @id @default(cuid())
  title     String
  details   String?
  status    String   @default("OPEN")
  createdAt DateTime @default(now())

  lawyerId  String
  clientId  String
  lawyer    Lawyer   @relation("LawyerCases", fields: [lawyerId], references: [id])
  client    Client   @relation("ClientCases", fields: [clientId], references: [id])

  payments  Payment[]
  messages  Message[]
}

model Message {
  id        String   @id @default(cuid())
  content   String
  createdAt DateTime @default(now())

  lawyerId  String?
  lawyer    Lawyer?  @relation(fields: [lawyerId], references: [id])

  clientId  String?
  client    Client?  @relation(fields: [clientId], references: [id])

  caseId    String?
  case      Case?    @relation(fields: [caseId], references: [id])
}

model Payment {
  id        String   @id @default(cuid())
  amount    Float
  status    String   @default("HOLD")
  createdAt DateTime @default(now())

  lawyerId  String
  clientId  String
  caseId    String

  lawyer    Lawyer   @relation(fields: [lawyerId], references: [id])
  client    Client   @relation(fields: [clientId], references: [id])
  case      Case     @relation(fields: [caseId], references: [id])
}

model Rating {
  id        String   @id @default(cuid())
  score     Int
  comment   String?
  createdAt DateTime @default(now())

  lawyerId  String
  clientId  String

  lawyer    Lawyer   @relation(fields: [lawyerId], references: [id])
  client    Client   @relation(fields: [clientId], references: [id])
}
