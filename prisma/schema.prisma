// prisma/schema.prisma
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql" // or "mysql" / "sqlite" depending on your DB
  url      = env("DATABASE_URL")
}

enum UserRole {
  CLIENT
  LAWYER
  ADMIN
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String?
  role      UserRole @default(CLIENT)

  lawyer    Lawyer?
  client    Client?
  messages  Message[]
}

model Lawyer {
  id        String   @id @default(cuid())
  name      String
  user      User     @relation(fields: [userId], references: [id])
  userId    String

  cases     Case[]   @relation("LawyerCases")
  messages  Message[]
  payments  Payment[]
  ratings   Rating[]
}

model Client {
  id        String   @id @default(cuid())
  name      String
  user      User     @relation(fields: [userId], references: [id])
  userId    String

  cases     Case[]   @relation("ClientCases")
  messages  Message[]
  payments  Payment[]
}

model Case {
  id        String   @id @default(cuid())
  title     String
  client    Client   @relation("ClientCases", fields: [clientId], references: [id])
  clientId  String
  lawyer    Lawyer   @relation("LawyerCases", fields: [lawyerId], references: [id])
  lawyerId  String

  messages  Message[]
  payments  Payment[]
}

model Message {
  id        String   @id @default(cuid())
  content   String
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  case      Case?    @relation(fields: [caseId], references: [id])
  caseId    String?
}

model Payment {
  id        String   @id @default(cuid())
  amount    Float
  case      Case     @relation(fields: [caseId], references: [id])
  caseId    String
  lawyer    Lawyer?  @relation(fields: [lawyerId], references: [id])
  lawyerId  String?
  client    Client?  @relation(fields: [clientId], references: [id])
  clientId  String?
}

model Rating {
  id        String   @id @default(cuid())
  value     Int
  lawyer    Lawyer   @relation(fields: [lawyerId], references: [id])
  lawyerId  String
}
